--- libc/sysdeps/linux/common/xstatconv.c
+++ libc/sysdeps/linux/common/xstatconv.c
@@ -34,42 +34,53 @@
 
 void __xstat_conv(struct kernel_stat *kbuf, struct stat *buf)
 {
-    /* Convert to current kernel version of `struct stat'.  */
-    buf->st_dev = kbuf->st_dev;
-    buf->st_ino = kbuf->st_ino;
-    buf->st_mode = kbuf->st_mode;
-    buf->st_nlink = kbuf->st_nlink;
-    buf->st_uid = kbuf->st_uid;
-    buf->st_gid = kbuf->st_gid;
-    buf->st_rdev = kbuf->st_rdev;
-    buf->st_size = kbuf->st_size;
-    buf->st_blksize = kbuf->st_blksize;
-    buf->st_blocks = kbuf->st_blocks;
-    buf->st_atime = kbuf->st_atime;
-    buf->st_mtime = kbuf->st_mtime;
-    buf->st_ctime = kbuf->st_ctime;
+	/* Convert to current kernel version of `struct stat'. */
+	buf->st_dev = kbuf->st_dev;
+	buf->st_ino = kbuf->st_ino;
+	buf->st_mode = kbuf->st_mode;
+	buf->st_nlink = kbuf->st_nlink;
+	buf->st_uid = kbuf->st_uid;
+	buf->st_gid = kbuf->st_gid;
+	buf->st_rdev = kbuf->st_rdev;
+	buf->st_size = kbuf->st_size;
+	buf->st_blksize = kbuf->st_blksize;
+	buf->st_blocks = kbuf->st_blocks;
+	buf->st_atime = kbuf->st_atime;
+	buf->st_mtime = kbuf->st_mtime;
+	buf->st_ctime = kbuf->st_ctime;
+#ifdef STAT_HAVE_NSEC
+	buf->st_atimensec = kbuf->st_atime_nsec;
+	buf->st_mtimensec = kbuf->st_mtime_nsec;
+	buf->st_ctimensec = kbuf->st_ctime_nsec;
+#endif
 }
 
-#if defined __UCLIBC_HAS_LFS__
+#if defined(__UCLIBC_HAS_LFS__)
+
 void __xstat64_conv(struct kernel_stat64 *kbuf, struct stat64 *buf)
 {
-    /* Convert to current kernel version of `struct stat64'.  */
-    buf->st_dev = kbuf->st_dev;
-    buf->st_ino = kbuf->st_ino;
+	/* Convert to current kernel version of `struct stat64'. */
+	buf->st_dev = kbuf->st_dev;
+	buf->st_ino = kbuf->st_ino;
 #ifdef _HAVE_STAT64___ST_INO
-    buf->__st_ino = kbuf->__st_ino;
+	buf->__st_ino = kbuf->__st_ino;
 #endif
-    buf->st_mode = kbuf->st_mode;
-    buf->st_nlink = kbuf->st_nlink;
-    buf->st_uid = kbuf->st_uid;
-    buf->st_gid = kbuf->st_gid;
-    buf->st_rdev = kbuf->st_rdev;
-    buf->st_size = kbuf->st_size;
-    buf->st_blksize = kbuf->st_blksize;
-    buf->st_blocks = kbuf->st_blocks;
-    buf->st_atime = kbuf->st_atime;
-    buf->st_mtime = kbuf->st_mtime;
-    buf->st_ctime = kbuf->st_ctime;
-}
+	buf->st_mode = kbuf->st_mode;
+	buf->st_nlink = kbuf->st_nlink;
+	buf->st_uid = kbuf->st_uid;
+	buf->st_gid = kbuf->st_gid;
+	buf->st_rdev = kbuf->st_rdev;
+	buf->st_size = kbuf->st_size;
+	buf->st_blksize = kbuf->st_blksize;
+	buf->st_blocks = kbuf->st_blocks;
+	buf->st_atime = kbuf->st_atime;
+	buf->st_mtime = kbuf->st_mtime;
+	buf->st_ctime = kbuf->st_ctime;
+#ifdef STAT_HAVE_NSEC
+	buf->st_atimensec = kbuf->st_atime_nsec;
+	buf->st_mtimensec = kbuf->st_mtime_nsec;
+	buf->st_ctimensec = kbuf->st_ctime_nsec;
 #endif
+}
 
+#endif /* __UCLIBC_HAS_LFS__ */
--- libc/sysdeps/linux/common/bits/stat.h
+++ libc/sysdeps/linux/common/bits/stat.h
@@ -1,4 +1,4 @@
-/* Copyright (C) 1992,95,96,97,98,99,2000,2001 Free Software Foundation, Inc.
+/* Copyright (C) 1992, 1995-2001, 2002 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
    The GNU C Library is free software; you can redistribute it and/or
@@ -63,11 +63,11 @@
     __blkcnt64_t st_blocks;		/* Number 512-byte blocks allocated. */
 #endif
     __time_t st_atime;			/* Time of last access.  */
-    unsigned long int __unused1;
+    unsigned long int st_atimensec;	/* Nscecs of last access.  */
     __time_t st_mtime;			/* Time of last modification.  */
-    unsigned long int __unused2;
+    unsigned long int st_mtimensec;	/* Nsecs of last modification.  */
     __time_t st_ctime;			/* Time of last status change.  */
-    unsigned long int __unused3;
+    unsigned long int st_ctimensec;	/* Nsecs of last status change.  */
 #ifndef __USE_FILE_OFFSET64
     unsigned long int __unused4;
     unsigned long int __unused5;
@@ -94,11 +94,11 @@
 
     __blkcnt64_t st_blocks;		/* Number 512-byte blocks allocated. */
     __time_t st_atime;			/* Time of last access.  */
-    unsigned long int __unused1;
+    unsigned long int st_atimensec;	/* Nscecs of last access.  */
     __time_t st_mtime;			/* Time of last modification.  */
-    unsigned long int __unused2;
+    unsigned long int st_mtimensec;	/* Nsecs of last modification.  */
     __time_t st_ctime;			/* Time of last status change.  */
-    unsigned long int __unused3;
+    unsigned long int st_ctimensec;	/* Nsecs of last status change.  */
     __ino64_t st_ino;			/* File serial number.		*/
 };
 #endif
@@ -107,6 +107,8 @@
 /* Tell code we have these members.  */
 #define	_STATBUF_ST_BLKSIZE
 #define _STATBUF_ST_RDEV
+/* Nanosecond resolution time values are supported.  */
+#define _STATBUF_ST_NSEC
 
 /* Encoding of the file mode.  */
 
--- libc/sysdeps/linux/arm/bits/kernel_stat.h
+++ libc/sysdeps/linux/arm/bits/kernel_stat.h
@@ -6,51 +6,66 @@
  * different opinion on the subject... */
 
 struct kernel_stat {
+#if defined(__ARMEB__)
 	unsigned short st_dev;
 	unsigned short __pad1;
+#else
+	unsigned long  st_dev;
+#endif
 	unsigned long st_ino;
 	unsigned short st_mode;
 	unsigned short st_nlink;
 	unsigned short st_uid;
 	unsigned short st_gid;
+#if defined(__ARMEB__)
 	unsigned short st_rdev;
 	unsigned short __pad2;
+#else
+	unsigned long  st_rdev;
+#endif
 	unsigned long  st_size;
 	unsigned long  st_blksize;
 	unsigned long  st_blocks;
 	unsigned long  st_atime;
-	unsigned long  __unused1;
+	unsigned long  st_atime_nsec;
 	unsigned long  st_mtime;
-	unsigned long  __unused2;
+	unsigned long  st_mtime_nsec;
 	unsigned long  st_ctime;
-	unsigned long  __unused3;
+	unsigned long  st_ctime_nsec;
 	unsigned long  __unused4;
 	unsigned long  __unused5;
 };
 
 struct kernel_stat64 {
-	unsigned short	st_dev;
-	unsigned char	__pad0[10];
+	unsigned long long st_dev;
+	unsigned char      __pad0[4];
+
 #define _HAVE_STAT64___ST_INO
-	unsigned long	__st_ino;
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
-	unsigned long	st_uid;
-	unsigned long	st_gid;
-	unsigned short	st_rdev;
-	unsigned char	__pad3[10];
-	long long	st_size;
-	unsigned long	st_blksize;
-	unsigned long	st_blocks;	/* Number 512-byte blocks allocated. */
-	unsigned long	__pad4;		/* future possible st_blocks high bits */
-	unsigned long	st_atime;
-	unsigned long	__pad5;
-	unsigned long	st_mtime;
-	unsigned long	__pad6;
-	unsigned long	st_ctime;
-	unsigned long	__pad7;		/* will be high 32 bits of ctime someday */
-	unsigned long long	st_ino;
-};
+	unsigned long      __st_ino;
+	unsigned int       st_mode;
+	unsigned int       st_nlink;
+	unsigned long      st_uid;
+	unsigned long      st_gid;
 
-#endif	/*  _BITS_STAT_STRUCT_H */
+	unsigned long long st_rdev;
+	unsigned char      __pad3[4];
 
+	long long          st_size;
+	unsigned long      st_blksize;
+#if defined(__ARMEB__)
+	unsigned long      __pad4;     /* future possible st_blocks high bits */
+	unsigned long      st_blocks;  /* Number 512-byte blocks allocated. */
+#else
+	unsigned long      st_blocks;  /* Number 512-byte blocks allocated. */
+	unsigned long      __pad4;     /* future possible st_blocks high bits */
+#endif
+	unsigned long      st_atime;
+	unsigned long      st_atime_nsec;
+	unsigned long      st_mtime;
+	unsigned long      st_mtime_nsec;
+	unsigned long      st_ctime;
+	unsigned long      st_ctime_nsec;
+	unsigned long long st_ino;
+} __attribute__((packed));
+
+#endif	/*  _BITS_STAT_STRUCT_H */
