Index: libc/stdlib/Makefile
===================================================================
--- libc/stdlib/Makefile	(revision 11187)
+++ libc/stdlib/Makefile	(revision 11188)
@@ -1,7 +1,7 @@
 # Makefile for uClibc
 #
 # Copyright (C) 2000 by Lineo, inc.
-# Copyright (C) 2000,2001 Erik Andersen <andersen@uclibc.org>
+# Copyright (C) 2000-2005 Erik Andersen <andersen@uclibc.org>
 #
 # This program is free software; you can redistribute it and/or modify it under
 # the terms of the GNU Library General Public License as published by the Free
@@ -86,7 +86,7 @@
 	getpt.c ptsname.c grantpt.c unlockpt.c gcvt.c drand48-iter.c jrand48.c \
 	jrand48_r.c lrand48.c lrand48_r.c mrand48.c mrand48_r.c nrand48.c \
 	nrand48_r.c rand_r.c srand48.c srand48_r.c seed48.c seed48_r.c \
-	valloc.c
+	valloc.c posix_memalign.c
 ifeq ($(UCLIBC_HAS_FLOATS),y)
 	CSRC += drand48.c drand48_r.c erand48.c erand48_r.c
 endif
Index: libc/stdlib/posix_memalign.c
===================================================================
--- libc/stdlib/posix_memalign.c	(revision 0)
+++ libc/stdlib/posix_memalign.c	(revision 11188)
@@ -0,0 +1,42 @@
+/* vi: set sw=4 ts=4: */
+/* posix_memalign for uClibc
+ *
+ * Copyright (C) 1996-2002, 2003, 2004, 2005 Free Software Foundation, Inc.
+ * Copyright (C) 2005 by Erik Andersen <andersen@uclibc.org>
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Library General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or (at your
+ * option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License
+ * for more details.
+ *
+ * You should have received a copy of the GNU Library General Public License
+ * along with this program; if not, write to the Free Software Foundation,
+ * Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ *
+ */
+
+#include <stdlib.h>
+#include <malloc.h>
+#include <sys/types.h>
+#include <errno.h>
+#include <sys/param.h>
+
+int posix_memalign(void **memptr, size_t alignment, size_t size)
+{
+	/* Make sure alignment is correct. */
+	if (alignment % sizeof(void *) != 0)
+	    /* Skip these checks because the memalign() func does them for us
+	     || !powerof2(alignment / sizeof(void *)) != 0
+	     || alignment == 0
+	     */
+		return EINVAL;
+
+	*memptr = memalign(alignment, size);
+
+	return (*memptr != NULL ? 0 : ENOMEM);
+}
