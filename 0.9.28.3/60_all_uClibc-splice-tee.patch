diff -ruN uClibc-0.9.28.3.orig/libc/sysdeps/linux/common/splice.c uClibc-0.9.28.3/libc/sysdeps/linux/common/splice.c
--- uClibc-0.9.28.3.orig/libc/sysdeps/linux/common/splice.c	1970-01-01 00:00:00 +0000
+++ uClibc-0.9.28.3/libc/sysdeps/linux/common/splice.c	2008-04-28 14:27:39 +0000
@@ -0,0 +1,24 @@
+/* vi: set sw=4 ts=4: */
+/*
+ * splice() for uClibc
+ *
+ * Copyright (C) 2000-2006 Erik Andersen <andersen@uclibc.org>
+ *
+ * Licensed under the LGPL v2.1, see the file COPYING.LIB in this tarball.
+ */
+
+#include <sys/syscall.h>
+#include <fcntl.h>
+
+#ifdef __NR_splice
+_syscall6(ssize_t, splice, int, __fdin, __off64_t *, __offin, int, __fdout,
+	__off64_t *, __offout, size_t, __len, unsigned int, __flags);
+#else
+ssize_t splice(int __fdin, __off64_t *__offin, int __fdout,
+	__off64_t *__offout, size_t __len, unsigned int __flags)
+{
+	__set_errno(ENOSYS);
+	return -1;
+}
+#endif
+
diff -ruN uClibc-0.9.28.3.orig/libc/sysdeps/linux/common/tee.c uClibc-0.9.28.3/libc/sysdeps/linux/common/tee.c
--- uClibc-0.9.28.3.orig/libc/sysdeps/linux/common/tee.c	1970-01-01 00:00:00 +0000
+++ uClibc-0.9.28.3/libc/sysdeps/linux/common/tee.c	2008-04-28 14:27:39 +0000
@@ -0,0 +1,23 @@
+/* vi: set sw=4 ts=4: */
+/*
+ * tee() for uClibc
+ *
+ * Copyright (C) 2000-2006 Erik Andersen <andersen@uclibc.org>
+ *
+ * Licensed under the LGPL v2.1, see the file COPYING.LIB in this tarball.
+ */
+
+#include <sys/syscall.h>
+#include <fcntl.h>
+
+#ifdef __NR_tee
+_syscall4(ssize_t, tee, int, __fdin, int, __fdout, size_t, __len,
+	unsigned int, __flags);
+#else
+ssize_t tee(int __fdin, int __fdout, size_t __len, unsigned int __flags)
+{
+	__set_errno(ENOSYS);
+	return -1;
+}
+#endif
+
diff -ruN uClibc-0.9.28.3.orig/libc/sysdeps/linux/common/vmsplice.c uClibc-0.9.28.3/libc/sysdeps/linux/common/vmsplice.c
--- uClibc-0.9.28.3.orig/libc/sysdeps/linux/common/vmsplice.c	1970-01-01 00:00:00 +0000
+++ uClibc-0.9.28.3/libc/sysdeps/linux/common/vmsplice.c	2008-04-28 14:27:39 +0000
@@ -0,0 +1,24 @@
+/* vi: set sw=4 ts=4: */
+/*
+ * vmsplice() for uClibc
+ *
+ * Copyright (C) 2000-2006 Erik Andersen <andersen@uclibc.org>
+ *
+ * Licensed under the LGPL v2.1, see the file COPYING.LIB in this tarball.
+ */
+
+#include <sys/syscall.h>
+#include <fcntl.h>
+
+#ifdef __NR_vmsplice
+_syscall4(ssize_t, vmsplice, int, __fdout, const struct iovec *, __iov,
+	size_t, __count, unsigned int, __flags);
+#else
+ssize_t vmsplice(int __fdout, const struct iovec *__iov, size_t __count,
+	unsigned int __flags)
+{
+	__set_errno(ENOSYS);
+	return -1;
+}
+#endif
+
--- uClibc-0.9.28.3.orig/libc/sysdeps/linux/i386/bits/fcntl.h	2008-04-28 14:27:25 +0000
+++ uClibc-0.9.28.3/libc/sysdeps/linux/i386/bits/fcntl.h	2008-04-28 14:35:36 +0000
@@ -1,5 +1,5 @@
 /* O_*, F_*, FD_* bit values for Linux.
-   Copyright (C) 1995, 1996, 1997, 1998, 2000 Free Software Foundation, Inc.
+   Copyright (C) 1995, 1996, 1997, 1998, 2000, 2008 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
    The GNU C Library is free software; you can redistribute it and/or
@@ -46,6 +46,7 @@
 # define O_DIRECTORY	0200000	/* Must be a directory.	 */
 # define O_NOFOLLOW	0400000	/* Do not follow links.	 */
 # define O_STREAMING	04000000/* streaming access */
+# define O_CLOEXEC     02000000 /* Set close_on_exec.  */
 #endif
 
 /* For now Linux has synchronisity options for data and read operations.
@@ -93,9 +94,11 @@
 # define F_SETLEASE	1024	/* Set a lease.	 */
 # define F_GETLEASE	1025	/* Enquire what lease is active.  */
 # define F_NOTIFY	1026	/* Request notfications on a directory.	 */
+# define F_DUPFD_CLOEXEC 1030	/* Duplicate file descriptor with
+				   close-on-exit set.  */
 #endif
 
-/* For F_[GET|SET]FL.  */
+/* For F_[GET|SET]FD.  */
 #define FD_CLOEXEC	1	/* actually anything with low bit set goes */
 
 /* For posix fcntl() and `l_type' field of a `struct flock' for lockf().  */
@@ -178,3 +181,25 @@
 # define POSIX_FADV_DONTNEED	4 /* Don't need these pages.  */
 # define POSIX_FADV_NOREUSE	5 /* Data will be accessed once.  */
 #endif
+
+#ifdef __USE_GNU
+
+/* Flags for SPLICE and VMSPLICE.  */
+# define SPLICE_F_MOVE         1       /* Move pages instead of copying.  */
+# define SPLICE_F_NONBLOCK     2       /* Don't block on the pipe splicing
+                                          (but we may still block on the fd
+                                          we splice from/to).  */
+# define SPLICE_F_MORE         4       /* Expect more data.  */
+# define SPLICE_F_GIFT         8       /* Pages passed in are a gift.  */
+
+extern size_t vmsplice (int __fdout, const struct iovec *__iov,
+			size_t __count, unsigned int __flags);
+
+extern ssize_t splice (int __fdin, __off64_t *__offin, int __fdout,
+                      __off64_t *__offout, size_t __len,
+                      unsigned int __flags);
+
+extern ssize_t tee (int __fdin, int __fdout, size_t __len,
+                   unsigned int __flags);
+
+#endif
