sync from 0.9.28 to latest svn

--- uClibc/libc/sysdeps/linux/mips/sigaction.c
+++ uClibc/libc/sysdeps/linux/mips/sigaction.c
@@ -37,22 +40,17 @@
     int result;
     struct kernel_sigaction kact, koact;
 
-#ifdef SIGCANCEL
-    if (sig == SIGCANCEL) {
-	__set_errno (EINVAL);
-	return -1;
-    }
-#endif
-
     if (act) {
 	kact.k_sa_handler = act->sa_handler;
 	memcpy (&kact.sa_mask, &act->sa_mask, sizeof (kact.sa_mask));
 	kact.sa_flags = act->sa_flags;
-
-	kact.sa_flags = act->sa_flags | SA_RESTORER;
-#ifdef HAVE_SA_RESTORER
+# ifdef HAVE_SA_RESTORER
+#  if _MIPS_SIM == _ABIO32
 	kact.sa_restorer = act->sa_restorer;
-#endif
+#  else
+	kact.sa_restorer = &restore_rt;
+#  endif
+# endif
     }
 
     /* XXX The size argument hopefully will have to be changed to the
@@ -64,17 +62,16 @@
 	oact->sa_handler = koact.k_sa_handler;
 	memcpy (&oact->sa_mask, &koact.sa_mask, sizeof (oact->sa_mask));
 	oact->sa_flags = koact.sa_flags;
-#ifdef HAVE_SA_RESTORER
+# ifdef HAVE_SA_RESTORER
 	oact->sa_restorer = koact.sa_restorer;
-#endif
+# endif
     }
     return result;
 }
 
 
 #else
-#warning "Yes there is a warning here.  Don't worry about it."
-static void restore (void) asm ("__restore");
+extern void restore (void) asm ("__restore");
 
 /* If ACT is not NULL, change the action for SIG to *ACT.
    If OACT is not NULL, put the old action for SIG in *OACT.  */
@@ -83,20 +80,17 @@
     int result;
     struct old_kernel_sigaction kact, koact;
 
-#ifdef SIGCANCEL
-    if (sig == SIGCANCEL) {
-	__set_errno (EINVAL);
-	return -1;
-    }
-#endif
-
     if (act) {
 	kact.k_sa_handler = act->sa_handler;
 	kact.sa_mask = act->sa_mask.__val[0];
-	kact.sa_flags = act->sa_flags | SA_RESTORER;
-#ifdef HAVE_SA_RESTORER
+	kact.sa_flags = act->sa_flags;
+# ifdef HAVE_SA_RESTORER
+#  if _MIPS_SIM == _ABIO32
 	kact.sa_restorer = act->sa_restorer;
-#endif
+#  else
+	kact.sa_restorer = &restore_rt;
+#  endif
+# endif
     }
 
     result = __syscall_sigaction(sig, act ? __ptrvalue (&kact) : NULL,
